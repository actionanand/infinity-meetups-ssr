import { i as identity, a as is_function, S as SvelteComponentDev, b as init, s as safe_not_equal, d as dispatch_dev, c as create_slot, v as validate_slots, e as element, f as claim_element, g as children, h as detach_dev, j as attr_dev, k as add_location, l as insert_hydration_dev, u as update_slot_base, m as get_all_dirty_from_scope, n as get_slot_changes, t as transition_in, o as add_render_callback, p as create_bidirectional_transition, q as transition_out, r as globals, w as createEventDispatcher, x as create_component, y as claim_component, z as mount_component, A as destroy_component, B as text, C as space, D as claim_text, E as claim_space, F as src_url_equal, G as append_hydration_dev, H as set_data_dev, I as group_outros, J as check_outros, K as noop, L as toggle_class, M as listen_dev, N as run_all, O as bubble, P as prop_dev, Q as prevent_default, R as onMount, T as onDestroy, U as empty, V as query_selector_all, W as validate_each_argument, X as validate_each_keys, Y as fix_position, Z as add_transform, _ as create_animation, $ as update_keyed_each, a0 as fix_and_outro_and_destroy_block } from './client.f9df6ebb.js';
import { B as Button, m as meetups } from './Button.cac47677.js';

function cubicOut(t) {
    const f = t - 1.0;
    return f * f * f + 1.0;
}

function fade(node, { delay = 0, duration = 400, easing = identity } = {}) {
    const o = +getComputedStyle(node).opacity;
    return {
        delay,
        duration,
        easing,
        css: t => `opacity: ${t * o}`
    };
}
function fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {
    const style = getComputedStyle(node);
    const target_opacity = +style.opacity;
    const transform = style.transform === 'none' ? '' : style.transform;
    const od = target_opacity * (1 - opacity);
    return {
        delay,
        duration,
        easing,
        css: (t, u) => `
			transform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);
			opacity: ${target_opacity - (od * u)}`
    };
}
function slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {
    const style = getComputedStyle(node);
    const opacity = +style.opacity;
    const height = parseFloat(style.height);
    const padding_top = parseFloat(style.paddingTop);
    const padding_bottom = parseFloat(style.paddingBottom);
    const margin_top = parseFloat(style.marginTop);
    const margin_bottom = parseFloat(style.marginBottom);
    const border_top_width = parseFloat(style.borderTopWidth);
    const border_bottom_width = parseFloat(style.borderBottomWidth);
    return {
        delay,
        duration,
        easing,
        css: t => 'overflow: hidden;' +
            `opacity: ${Math.min(t * 20, 1) * opacity};` +
            `height: ${t * height}px;` +
            `padding-top: ${t * padding_top}px;` +
            `padding-bottom: ${t * padding_bottom}px;` +
            `margin-top: ${t * margin_top}px;` +
            `margin-bottom: ${t * margin_bottom}px;` +
            `border-top-width: ${t * border_top_width}px;` +
            `border-bottom-width: ${t * border_bottom_width}px;`
    };
}
function scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {
    const style = getComputedStyle(node);
    const target_opacity = +style.opacity;
    const transform = style.transform === 'none' ? '' : style.transform;
    const sd = 1 - start;
    const od = target_opacity * (1 - opacity);
    return {
        delay,
        duration,
        easing,
        css: (_t, u) => `
			transform: ${transform} scale(${1 - (sd * u)});
			opacity: ${target_opacity - (od * u)}
		`
    };
}

function flip(node, { from, to }, params = {}) {
    const style = getComputedStyle(node);
    const transform = style.transform === 'none' ? '' : style.transform;
    const [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);
    const dx = (from.left + from.width * ox / to.width) - (to.left + ox);
    const dy = (from.top + from.height * oy / to.height) - (to.top + oy);
    const { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;
    return {
        delay,
        duration: is_function(duration) ? duration(Math.sqrt(dx * dx + dy * dy)) : duration,
        easing,
        css: (t, u) => {
            const x = u * dx;
            const y = u * dy;
            const sx = t + u * from.width / to.width;
            const sy = t + u * from.height / to.height;
            return `transform: ${transform} translate(${x}px, ${y}px) scale(${sx}, ${sy});`;
        }
    };
}

/* src/components/UI/Badge.svelte generated by Svelte v3.46.3 */
const file = "src/components/UI/Badge.svelte";

function create_fragment(ctx) {
	let span;
	let span_transition;
	let current;
	const default_slot_template = /*#slots*/ ctx[1].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[0], null);

	const block = {
		c: function create() {
			span = element("span");
			if (default_slot) default_slot.c();
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			if (default_slot) default_slot.l(span_nodes);
			span_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span, "class", "svelte-1yf4dvc");
			add_location(span, file, 18, 0, 324);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, span, anchor);

			if (default_slot) {
				default_slot.m(span, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && (!current || dirty & /*$$scope*/ 1)) {
					update_slot_base(
						default_slot,
						default_slot_template,
						ctx,
						/*$$scope*/ ctx[0],
						!current
						? get_all_dirty_from_scope(/*$$scope*/ ctx[0])
						: get_slot_changes(default_slot_template, /*$$scope*/ ctx[0], dirty, null),
						null
					);
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);

			add_render_callback(() => {
				if (!span_transition) span_transition = create_bidirectional_transition(span, slide, {}, true);
				span_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			if (!span_transition) span_transition = create_bidirectional_transition(span, slide, {}, false);
			span_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
			if (default_slot) default_slot.d(detaching);
			if (detaching && span_transition) span_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Badge', slots, ['default']);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Badge> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('$$scope' in $$props) $$invalidate(0, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => ({ slide });
	return [$$scope, slots];
}

class Badge extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Badge",
			options,
			id: create_fragment.name
		});
	}
}

/* src/components/Meetup/MeetupItem.svelte generated by Svelte v3.46.3 */

const { Error: Error_1, console: console_1 } = globals;
const file$1 = "src/components/Meetup/MeetupItem.svelte";

// (112:6) {#if isFav}
function create_if_block_1(ctx) {
	let badge;
	let current;

	badge = new Badge({
			props: {
				$$slots: { default: [create_default_slot_3] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(badge.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(badge.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(badge, target, anchor);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			transition_in(badge.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(badge.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(badge, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(112:6) {#if isFav}",
		ctx
	});

	return block;
}

// (113:8) <Badge>
function create_default_slot_3(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Favorite");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Favorite");
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_3.name,
		type: "slot",
		source: "(113:8) <Badge>",
		ctx
	});

	return block;
}

// (127:4) <Button mode="outline" type="button" on:click="{dispatch('edit-meetup', id)}">
function create_default_slot_2(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Edit");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Edit");
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_2.name,
		type: "slot",
		source: "(127:4) <Button mode=\\\"outline\\\" type=\\\"button\\\" on:click=\\\"{dispatch('edit-meetup', id)}\\\">",
		ctx
	});

	return block;
}

// (130:4) {:else}
function create_else_block(ctx) {
	let button;
	let current;

	button = new Button({
			props: {
				type: "button",
				mode: "outline",
				color: /*isFav*/ ctx[6] ? null : 'success',
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button.$on("click", /*onToggleFavorite*/ ctx[9]);

	const block = {
		c: function create() {
			create_component(button.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(button.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(button, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const button_changes = {};
			if (dirty & /*isFav*/ 64) button_changes.color = /*isFav*/ ctx[6] ? null : 'success';

			if (dirty & /*$$scope, isFav*/ 4160) {
				button_changes.$$scope = { dirty, ctx };
			}

			button.$set(button_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(button.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(button.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(button, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(130:4) {:else}",
		ctx
	});

	return block;
}

// (128:4) {#if isLoading}
function create_if_block(ctx) {
	let span;
	let t0_value = (/*isFav*/ ctx[6] ? 'Unfavoriting' : 'Favoriting') + "";
	let t0;
	let t1;

	const block = {
		c: function create() {
			span = element("span");
			t0 = text(t0_value);
			t1 = text("...");
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			t0 = claim_text(span_nodes, t0_value);
			t1 = claim_text(span_nodes, "...");
			span_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span, "class", "changing-fav svelte-if5wql");
			add_location(span, file$1, 128, 6, 2461);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, span, anchor);
			append_hydration_dev(span, t0);
			append_hydration_dev(span, t1);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*isFav*/ 64 && t0_value !== (t0_value = (/*isFav*/ ctx[6] ? 'Unfavoriting' : 'Favoriting') + "")) set_data_dev(t0, t0_value);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(128:4) {#if isLoading}",
		ctx
	});

	return block;
}

// (131:6) <Button          type="button"          mode="outline"          color={isFav? null : 'success'}         on:click="{onToggleFavorite}">
function create_default_slot_1(ctx) {
	let t_value = (/*isFav*/ ctx[6] ? 'Unfavorite' : 'Favorite') + "";
	let t;

	const block = {
		c: function create() {
			t = text(t_value);
		},
		l: function claim(nodes) {
			t = claim_text(nodes, t_value);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*isFav*/ 64 && t_value !== (t_value = (/*isFav*/ ctx[6] ? 'Unfavorite' : 'Favorite') + "")) set_data_dev(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(131:6) <Button          type=\\\"button\\\"          mode=\\\"outline\\\"          color={isFav? null : 'success'}         on:click=\\\"{onToggleFavorite}\\\">",
		ctx
	});

	return block;
}

// (139:4) <Button type="button" on:click="{() => dispatch('show-details', id)}">
function create_default_slot(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Show Details");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Show Details");
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(139:4) <Button type=\\\"button\\\" on:click=\\\"{() => dispatch('show-details', id)}\\\">",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let article;
	let header;
	let h1;
	let t0;
	let t1;
	let t2;
	let h2;
	let t3;
	let t4;
	let p0;
	let t5;
	let t6;
	let div0;
	let img;
	let img_src_value;
	let t7;
	let div1;
	let p1;
	let t8;
	let t9;
	let footer;
	let button0;
	let t10;
	let current_block_type_index;
	let if_block1;
	let t11;
	let button1;
	let current;
	let if_block0 = /*isFav*/ ctx[6] && create_if_block_1(ctx);

	button0 = new Button({
			props: {
				mode: "outline",
				type: "button",
				$$slots: { default: [create_default_slot_2] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button0.$on("click", function () {
		if (is_function(/*dispatch*/ ctx[8]('edit-meetup', /*id*/ ctx[5]))) /*dispatch*/ ctx[8]('edit-meetup', /*id*/ ctx[5]).apply(this, arguments);
	});

	const if_block_creators = [create_if_block, create_else_block];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*isLoading*/ ctx[7]) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx);
	if_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	button1 = new Button({
			props: {
				type: "button",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button1.$on("click", /*click_handler*/ ctx[11]);

	const block = {
		c: function create() {
			article = element("article");
			header = element("header");
			h1 = element("h1");
			t0 = text(/*title*/ ctx[0]);
			t1 = space();
			if (if_block0) if_block0.c();
			t2 = space();
			h2 = element("h2");
			t3 = text(/*subtitle*/ ctx[1]);
			t4 = space();
			p0 = element("p");
			t5 = text(/*address*/ ctx[4]);
			t6 = space();
			div0 = element("div");
			img = element("img");
			t7 = space();
			div1 = element("div");
			p1 = element("p");
			t8 = text(/*description*/ ctx[3]);
			t9 = space();
			footer = element("footer");
			create_component(button0.$$.fragment);
			t10 = space();
			if_block1.c();
			t11 = space();
			create_component(button1.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			article = claim_element(nodes, "ARTICLE", { class: true });
			var article_nodes = children(article);
			header = claim_element(article_nodes, "HEADER", { class: true });
			var header_nodes = children(header);
			h1 = claim_element(header_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, /*title*/ ctx[0]);
			t1 = claim_space(h1_nodes);
			if (if_block0) if_block0.l(h1_nodes);
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(header_nodes);
			h2 = claim_element(header_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t3 = claim_text(h2_nodes, /*subtitle*/ ctx[1]);
			h2_nodes.forEach(detach_dev);
			t4 = claim_space(header_nodes);
			p0 = claim_element(header_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t5 = claim_text(p0_nodes, /*address*/ ctx[4]);
			p0_nodes.forEach(detach_dev);
			header_nodes.forEach(detach_dev);
			t6 = claim_space(article_nodes);
			div0 = claim_element(article_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img = claim_element(div0_nodes, "IMG", { src: true, alt: true, class: true });
			div0_nodes.forEach(detach_dev);
			t7 = claim_space(article_nodes);
			div1 = claim_element(article_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			p1 = claim_element(div1_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t8 = claim_text(p1_nodes, /*description*/ ctx[3]);
			p1_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t9 = claim_space(article_nodes);
			footer = claim_element(article_nodes, "FOOTER", { class: true });
			var footer_nodes = children(footer);
			claim_component(button0.$$.fragment, footer_nodes);
			t10 = claim_space(footer_nodes);
			if_block1.l(footer_nodes);
			t11 = claim_space(footer_nodes);
			claim_component(button1.$$.fragment, footer_nodes);
			footer_nodes.forEach(detach_dev);
			article_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h1, "class", "svelte-if5wql");
			add_location(h1, file$1, 109, 4, 1989);
			attr_dev(h2, "class", "svelte-if5wql");
			add_location(h2, file$1, 115, 4, 2085);
			attr_dev(p0, "class", "svelte-if5wql");
			add_location(p0, file$1, 116, 4, 2109);
			attr_dev(header, "class", "svelte-if5wql");
			add_location(header, file$1, 108, 2, 1976);
			if (!src_url_equal(img.src, img_src_value = /*imageUrl*/ ctx[2])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", /*title*/ ctx[0]);
			attr_dev(img, "class", "svelte-if5wql");
			add_location(img, file$1, 119, 4, 2164);
			attr_dev(div0, "class", "image svelte-if5wql");
			add_location(div0, file$1, 118, 2, 2140);
			attr_dev(p1, "class", "svelte-if5wql");
			add_location(p1, file$1, 122, 4, 2238);
			attr_dev(div1, "class", "content svelte-if5wql");
			add_location(div1, file$1, 121, 2, 2212);
			attr_dev(footer, "class", "svelte-if5wql");
			add_location(footer, file$1, 124, 2, 2270);
			attr_dev(article, "class", "svelte-if5wql");
			add_location(article, file$1, 107, 0, 1964);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, article, anchor);
			append_hydration_dev(article, header);
			append_hydration_dev(header, h1);
			append_hydration_dev(h1, t0);
			append_hydration_dev(h1, t1);
			if (if_block0) if_block0.m(h1, null);
			append_hydration_dev(header, t2);
			append_hydration_dev(header, h2);
			append_hydration_dev(h2, t3);
			append_hydration_dev(header, t4);
			append_hydration_dev(header, p0);
			append_hydration_dev(p0, t5);
			append_hydration_dev(article, t6);
			append_hydration_dev(article, div0);
			append_hydration_dev(div0, img);
			append_hydration_dev(article, t7);
			append_hydration_dev(article, div1);
			append_hydration_dev(div1, p1);
			append_hydration_dev(p1, t8);
			append_hydration_dev(article, t9);
			append_hydration_dev(article, footer);
			mount_component(button0, footer, null);
			append_hydration_dev(footer, t10);
			if_blocks[current_block_type_index].m(footer, null);
			append_hydration_dev(footer, t11);
			mount_component(button1, footer, null);
			current = true;
		},
		p: function update(new_ctx, [dirty]) {
			ctx = new_ctx;
			if (!current || dirty & /*title*/ 1) set_data_dev(t0, /*title*/ ctx[0]);

			if (/*isFav*/ ctx[6]) {
				if (if_block0) {
					if (dirty & /*isFav*/ 64) {
						transition_in(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_1(ctx);
					if_block0.c();
					transition_in(if_block0, 1);
					if_block0.m(h1, null);
				}
			} else if (if_block0) {
				group_outros();

				transition_out(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				check_outros();
			}

			if (!current || dirty & /*subtitle*/ 2) set_data_dev(t3, /*subtitle*/ ctx[1]);
			if (!current || dirty & /*address*/ 16) set_data_dev(t5, /*address*/ ctx[4]);

			if (!current || dirty & /*imageUrl*/ 4 && !src_url_equal(img.src, img_src_value = /*imageUrl*/ ctx[2])) {
				attr_dev(img, "src", img_src_value);
			}

			if (!current || dirty & /*title*/ 1) {
				attr_dev(img, "alt", /*title*/ ctx[0]);
			}

			if (!current || dirty & /*description*/ 8) set_data_dev(t8, /*description*/ ctx[3]);
			const button0_changes = {};

			if (dirty & /*$$scope*/ 4096) {
				button0_changes.$$scope = { dirty, ctx };
			}

			button0.$set(button0_changes);
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				group_outros();

				transition_out(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				check_outros();
				if_block1 = if_blocks[current_block_type_index];

				if (!if_block1) {
					if_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block1.c();
				} else {
					if_block1.p(ctx, dirty);
				}

				transition_in(if_block1, 1);
				if_block1.m(footer, t11);
			}

			const button1_changes = {};

			if (dirty & /*$$scope*/ 4096) {
				button1_changes.$$scope = { dirty, ctx };
			}

			button1.$set(button1_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block0);
			transition_in(button0.$$.fragment, local);
			transition_in(if_block1);
			transition_in(button1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block0);
			transition_out(button0.$$.fragment, local);
			transition_out(if_block1);
			transition_out(button1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(article);
			if (if_block0) if_block0.d();
			destroy_component(button0);
			if_blocks[current_block_type_index].d();
			destroy_component(button1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('MeetupItem', slots, []);
	let { title } = $$props;
	let { subtitle } = $$props;
	let { imageUrl } = $$props;
	let { description } = $$props;
	let { address } = $$props;
	let { email } = $$props;
	let { id } = $$props;
	let { isFav } = $$props;
	let isLoading = false;
	const dispatch = createEventDispatcher();

	function onToggleFavorite() {
		$$invalidate(7, isLoading = true);

		fetch(`https://vue-http-exmp-default-rtdb.firebaseio.com/meetups/${id}.json`, {
			method: 'PATCH',
			body: JSON.stringify({ isFavorite: !isFav }),
			headers: { 'Content-Type': 'application/json' }
		}).then(res => {
			if (!res.ok) {
				throw new Error('Error changing favorite status!');
			}

			$$invalidate(7, isLoading = false);
			meetups.toggleFavorite(id);
		}).catch(err => {
			$$invalidate(7, isLoading = false);
			console.log(err);
		});
	}

	const writable_props = [
		'title',
		'subtitle',
		'imageUrl',
		'description',
		'address',
		'email',
		'id',
		'isFav'
	];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(`<MeetupItem> was created with unknown prop '${key}'`);
	});

	const click_handler = () => dispatch('show-details', id);

	$$self.$$set = $$props => {
		if ('title' in $$props) $$invalidate(0, title = $$props.title);
		if ('subtitle' in $$props) $$invalidate(1, subtitle = $$props.subtitle);
		if ('imageUrl' in $$props) $$invalidate(2, imageUrl = $$props.imageUrl);
		if ('description' in $$props) $$invalidate(3, description = $$props.description);
		if ('address' in $$props) $$invalidate(4, address = $$props.address);
		if ('email' in $$props) $$invalidate(10, email = $$props.email);
		if ('id' in $$props) $$invalidate(5, id = $$props.id);
		if ('isFav' in $$props) $$invalidate(6, isFav = $$props.isFav);
	};

	$$self.$capture_state = () => ({
		createEventDispatcher,
		meetups,
		Button,
		Badge,
		title,
		subtitle,
		imageUrl,
		description,
		address,
		email,
		id,
		isFav,
		isLoading,
		dispatch,
		onToggleFavorite
	});

	$$self.$inject_state = $$props => {
		if ('title' in $$props) $$invalidate(0, title = $$props.title);
		if ('subtitle' in $$props) $$invalidate(1, subtitle = $$props.subtitle);
		if ('imageUrl' in $$props) $$invalidate(2, imageUrl = $$props.imageUrl);
		if ('description' in $$props) $$invalidate(3, description = $$props.description);
		if ('address' in $$props) $$invalidate(4, address = $$props.address);
		if ('email' in $$props) $$invalidate(10, email = $$props.email);
		if ('id' in $$props) $$invalidate(5, id = $$props.id);
		if ('isFav' in $$props) $$invalidate(6, isFav = $$props.isFav);
		if ('isLoading' in $$props) $$invalidate(7, isLoading = $$props.isLoading);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		title,
		subtitle,
		imageUrl,
		description,
		address,
		id,
		isFav,
		isLoading,
		dispatch,
		onToggleFavorite,
		email,
		click_handler
	];
}

class MeetupItem extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$1, create_fragment$1, safe_not_equal, {
			title: 0,
			subtitle: 1,
			imageUrl: 2,
			description: 3,
			address: 4,
			email: 10,
			id: 5,
			isFav: 6
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "MeetupItem",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*title*/ ctx[0] === undefined && !('title' in props)) {
			console_1.warn("<MeetupItem> was created without expected prop 'title'");
		}

		if (/*subtitle*/ ctx[1] === undefined && !('subtitle' in props)) {
			console_1.warn("<MeetupItem> was created without expected prop 'subtitle'");
		}

		if (/*imageUrl*/ ctx[2] === undefined && !('imageUrl' in props)) {
			console_1.warn("<MeetupItem> was created without expected prop 'imageUrl'");
		}

		if (/*description*/ ctx[3] === undefined && !('description' in props)) {
			console_1.warn("<MeetupItem> was created without expected prop 'description'");
		}

		if (/*address*/ ctx[4] === undefined && !('address' in props)) {
			console_1.warn("<MeetupItem> was created without expected prop 'address'");
		}

		if (/*email*/ ctx[10] === undefined && !('email' in props)) {
			console_1.warn("<MeetupItem> was created without expected prop 'email'");
		}

		if (/*id*/ ctx[5] === undefined && !('id' in props)) {
			console_1.warn("<MeetupItem> was created without expected prop 'id'");
		}

		if (/*isFav*/ ctx[6] === undefined && !('isFav' in props)) {
			console_1.warn("<MeetupItem> was created without expected prop 'isFav'");
		}
	}

	get title() {
		throw new Error_1("<MeetupItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error_1("<MeetupItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get subtitle() {
		throw new Error_1("<MeetupItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set subtitle(value) {
		throw new Error_1("<MeetupItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get imageUrl() {
		throw new Error_1("<MeetupItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set imageUrl(value) {
		throw new Error_1("<MeetupItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get description() {
		throw new Error_1("<MeetupItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set description(value) {
		throw new Error_1("<MeetupItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get address() {
		throw new Error_1("<MeetupItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set address(value) {
		throw new Error_1("<MeetupItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get email() {
		throw new Error_1("<MeetupItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set email(value) {
		throw new Error_1("<MeetupItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get id() {
		throw new Error_1("<MeetupItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set id(value) {
		throw new Error_1("<MeetupItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get isFav() {
		throw new Error_1("<MeetupItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isFav(value) {
		throw new Error_1("<MeetupItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/Meetup/MeetupFilter.svelte generated by Svelte v3.46.3 */
const file$2 = "src/components/Meetup/MeetupFilter.svelte";

function create_fragment$2(ctx) {
	let div;
	let button0;
	let t0;
	let t1;
	let button1;
	let t2;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div = element("div");
			button0 = element("button");
			t0 = text("All");
			t1 = space();
			button1 = element("button");
			t2 = text("Favorite");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			button0 = claim_element(div_nodes, "BUTTON", { type: true, class: true });
			var button0_nodes = children(button0);
			t0 = claim_text(button0_nodes, "All");
			button0_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);
			button1 = claim_element(div_nodes, "BUTTON", { type: true, class: true });
			var button1_nodes = children(button1);
			t2 = claim_text(button1_nodes, "Favorite");
			button1_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(button0, "type", "button");
			attr_dev(button0, "class", "svelte-wewm0q");
			toggle_class(button0, "active", /*selectedButton*/ ctx[0] === 'all-meetup');
			add_location(button0, file$2, 9, 2, 161);
			attr_dev(button1, "type", "button");
			attr_dev(button1, "class", "svelte-wewm0q");
			toggle_class(button1, "active", /*selectedButton*/ ctx[0] === 'fav-meetup');
			add_location(button1, file$2, 14, 2, 357);
			attr_dev(div, "class", "svelte-wewm0q");
			add_location(div, file$2, 8, 0, 153);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div, anchor);
			append_hydration_dev(div, button0);
			append_hydration_dev(button0, t0);
			append_hydration_dev(div, t1);
			append_hydration_dev(div, button1);
			append_hydration_dev(button1, t2);

			if (!mounted) {
				dispose = [
					listen_dev(button0, "click", /*click_handler*/ ctx[2], false, false, false),
					listen_dev(button1, "click", /*click_handler_1*/ ctx[3], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*selectedButton*/ 1) {
				toggle_class(button0, "active", /*selectedButton*/ ctx[0] === 'all-meetup');
			}

			if (dirty & /*selectedButton*/ 1) {
				toggle_class(button1, "active", /*selectedButton*/ ctx[0] === 'fav-meetup');
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('MeetupFilter', slots, []);
	const dispatch = createEventDispatcher();
	let selectedButton = 'all-meetup';
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<MeetupFilter> was created with unknown prop '${key}'`);
	});

	const click_handler = () => {
		$$invalidate(0, selectedButton = 'all-meetup');
		dispatch('select-component', 'all-meetup');
	};

	const click_handler_1 = () => {
		$$invalidate(0, selectedButton = 'fav-meetup');
		dispatch('select-component', 'fav-meetup');
	};

	$$self.$capture_state = () => ({
		createEventDispatcher,
		dispatch,
		selectedButton
	});

	$$self.$inject_state = $$props => {
		if ('selectedButton' in $$props) $$invalidate(0, selectedButton = $$props.selectedButton);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [selectedButton, dispatch, click_handler, click_handler_1];
}

class MeetupFilter extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "MeetupFilter",
			options,
			id: create_fragment$2.name
		});
	}
}

/* src/components/UI/TextInput.svelte generated by Svelte v3.46.3 */

const file$3 = "src/components/UI/TextInput.svelte";

// (21:2) {:else}
function create_else_block$1(ctx) {
	let input;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			input = element("input");
			this.h();
		},
		l: function claim(nodes) {
			input = claim_element(nodes, "INPUT", {
				type: true,
				name: true,
				id: true,
				placeholder: true,
				class: true
			});

			this.h();
		},
		h: function hydrate() {
			attr_dev(input, "type", /*type*/ ctx[6]);
			attr_dev(input, "name", /*id*/ ctx[1]);
			attr_dev(input, "id", /*id*/ ctx[1]);
			attr_dev(input, "placeholder", /*placeholder*/ ctx[4]);
			input.value = /*value*/ ctx[5];
			attr_dev(input, "class", "svelte-nbe6ea");
			toggle_class(input, "invalid", !/*valid*/ ctx[7] && /*touched*/ ctx[9]);
			add_location(input, file$3, 21, 6, 585);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, input, anchor);

			if (!mounted) {
				dispose = [
					listen_dev(input, "input", /*input_handler_1*/ ctx[11], false, false, false),
					listen_dev(input, "blur", /*blur_handler_1*/ ctx[13], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*type*/ 64) {
				attr_dev(input, "type", /*type*/ ctx[6]);
			}

			if (dirty & /*id*/ 2) {
				attr_dev(input, "name", /*id*/ ctx[1]);
			}

			if (dirty & /*id*/ 2) {
				attr_dev(input, "id", /*id*/ ctx[1]);
			}

			if (dirty & /*placeholder*/ 16) {
				attr_dev(input, "placeholder", /*placeholder*/ ctx[4]);
			}

			if (dirty & /*value*/ 32 && input.value !== /*value*/ ctx[5]) {
				prop_dev(input, "value", /*value*/ ctx[5]);
			}

			if (dirty & /*valid, touched*/ 640) {
				toggle_class(input, "invalid", !/*valid*/ ctx[7] && /*touched*/ ctx[9]);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(input);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block$1.name,
		type: "else",
		source: "(21:2) {:else}",
		ctx
	});

	return block;
}

// (17:2) {#if controlType === 'textarea'}
function create_if_block_1$1(ctx) {
	let textarea;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			textarea = element("textarea");
			this.h();
		},
		l: function claim(nodes) {
			textarea = claim_element(nodes, "TEXTAREA", {
				name: true,
				id: true,
				rows: true,
				placeholder: true,
				class: true
			});

			children(textarea).forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(textarea, "name", /*id*/ ctx[1]);
			attr_dev(textarea, "id", /*id*/ ctx[1]);
			attr_dev(textarea, "rows", /*row*/ ctx[3]);
			attr_dev(textarea, "placeholder", /*placeholder*/ ctx[4]);
			textarea.value = /*value*/ ctx[5];
			attr_dev(textarea, "class", "svelte-nbe6ea");
			toggle_class(textarea, "invalid", !/*valid*/ ctx[7] && /*touched*/ ctx[9]);
			add_location(textarea, file$3, 17, 6, 380);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, textarea, anchor);

			if (!mounted) {
				dispose = [
					listen_dev(textarea, "input", /*input_handler*/ ctx[10], false, false, false),
					listen_dev(textarea, "blur", /*blur_handler*/ ctx[12], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*id*/ 2) {
				attr_dev(textarea, "name", /*id*/ ctx[1]);
			}

			if (dirty & /*id*/ 2) {
				attr_dev(textarea, "id", /*id*/ ctx[1]);
			}

			if (dirty & /*row*/ 8) {
				attr_dev(textarea, "rows", /*row*/ ctx[3]);
			}

			if (dirty & /*placeholder*/ 16) {
				attr_dev(textarea, "placeholder", /*placeholder*/ ctx[4]);
			}

			if (dirty & /*value*/ 32) {
				prop_dev(textarea, "value", /*value*/ ctx[5]);
			}

			if (dirty & /*valid, touched*/ 640) {
				toggle_class(textarea, "invalid", !/*valid*/ ctx[7] && /*touched*/ ctx[9]);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(textarea);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1$1.name,
		type: "if",
		source: "(17:2) {#if controlType === 'textarea'}",
		ctx
	});

	return block;
}

// (27:2) {#if validityMessage && !valid && touched}
function create_if_block$1(ctx) {
	let p;
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text(/*validityMessage*/ ctx[8]);
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, /*validityMessage*/ ctx[8]);
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "error-message svelte-nbe6ea");
			add_location(p, file$3, 27, 4, 827);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, p, anchor);
			append_hydration_dev(p, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*validityMessage*/ 256) set_data_dev(t, /*validityMessage*/ ctx[8]);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$1.name,
		type: "if",
		source: "(27:2) {#if validityMessage && !valid && touched}",
		ctx
	});

	return block;
}

function create_fragment$3(ctx) {
	let div;
	let label_1;
	let t0;
	let t1;
	let t2;

	function select_block_type(ctx, dirty) {
		if (/*controlType*/ ctx[0] === 'textarea') return create_if_block_1$1;
		return create_else_block$1;
	}

	let current_block_type = select_block_type(ctx);
	let if_block0 = current_block_type(ctx);
	let if_block1 = /*validityMessage*/ ctx[8] && !/*valid*/ ctx[7] && /*touched*/ ctx[9] && create_if_block$1(ctx);

	const block = {
		c: function create() {
			div = element("div");
			label_1 = element("label");
			t0 = text(/*label*/ ctx[2]);
			t1 = space();
			if_block0.c();
			t2 = space();
			if (if_block1) if_block1.c();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			label_1 = claim_element(div_nodes, "LABEL", { for: true, class: true });
			var label_1_nodes = children(label_1);
			t0 = claim_text(label_1_nodes, /*label*/ ctx[2]);
			label_1_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);
			if_block0.l(div_nodes);
			t2 = claim_space(div_nodes);
			if (if_block1) if_block1.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(label_1, "for", /*id*/ ctx[1]);
			attr_dev(label_1, "class", "svelte-nbe6ea");
			add_location(label_1, file$3, 15, 2, 305);
			attr_dev(div, "class", "form-control svelte-nbe6ea");
			add_location(div, file$3, 14, 0, 276);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div, anchor);
			append_hydration_dev(div, label_1);
			append_hydration_dev(label_1, t0);
			append_hydration_dev(div, t1);
			if_block0.m(div, null);
			append_hydration_dev(div, t2);
			if (if_block1) if_block1.m(div, null);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*label*/ 4) set_data_dev(t0, /*label*/ ctx[2]);

			if (dirty & /*id*/ 2) {
				attr_dev(label_1, "for", /*id*/ ctx[1]);
			}

			if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block0) {
				if_block0.p(ctx, dirty);
			} else {
				if_block0.d(1);
				if_block0 = current_block_type(ctx);

				if (if_block0) {
					if_block0.c();
					if_block0.m(div, t2);
				}
			}

			if (/*validityMessage*/ ctx[8] && !/*valid*/ ctx[7] && /*touched*/ ctx[9]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block$1(ctx);
					if_block1.c();
					if_block1.m(div, null);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if_block0.d();
			if (if_block1) if_block1.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$3.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$3($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('TextInput', slots, []);
	let { controlType = null } = $$props;
	let { id } = $$props;
	let { label } = $$props;
	let { row = null } = $$props;
	let { placeholder } = $$props;
	let { value } = $$props;
	let { type = 'text' } = $$props;
	let { valid = true } = $$props;
	let { validityMessage = '' } = $$props;
	let touched = false;

	const writable_props = [
		'controlType',
		'id',
		'label',
		'row',
		'placeholder',
		'value',
		'type',
		'valid',
		'validityMessage'
	];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<TextInput> was created with unknown prop '${key}'`);
	});

	function input_handler(event) {
		bubble.call(this, $$self, event);
	}

	function input_handler_1(event) {
		bubble.call(this, $$self, event);
	}

	const blur_handler = () => $$invalidate(9, touched = true);
	const blur_handler_1 = () => $$invalidate(9, touched = true);

	$$self.$$set = $$props => {
		if ('controlType' in $$props) $$invalidate(0, controlType = $$props.controlType);
		if ('id' in $$props) $$invalidate(1, id = $$props.id);
		if ('label' in $$props) $$invalidate(2, label = $$props.label);
		if ('row' in $$props) $$invalidate(3, row = $$props.row);
		if ('placeholder' in $$props) $$invalidate(4, placeholder = $$props.placeholder);
		if ('value' in $$props) $$invalidate(5, value = $$props.value);
		if ('type' in $$props) $$invalidate(6, type = $$props.type);
		if ('valid' in $$props) $$invalidate(7, valid = $$props.valid);
		if ('validityMessage' in $$props) $$invalidate(8, validityMessage = $$props.validityMessage);
	};

	$$self.$capture_state = () => ({
		controlType,
		id,
		label,
		row,
		placeholder,
		value,
		type,
		valid,
		validityMessage,
		touched
	});

	$$self.$inject_state = $$props => {
		if ('controlType' in $$props) $$invalidate(0, controlType = $$props.controlType);
		if ('id' in $$props) $$invalidate(1, id = $$props.id);
		if ('label' in $$props) $$invalidate(2, label = $$props.label);
		if ('row' in $$props) $$invalidate(3, row = $$props.row);
		if ('placeholder' in $$props) $$invalidate(4, placeholder = $$props.placeholder);
		if ('value' in $$props) $$invalidate(5, value = $$props.value);
		if ('type' in $$props) $$invalidate(6, type = $$props.type);
		if ('valid' in $$props) $$invalidate(7, valid = $$props.valid);
		if ('validityMessage' in $$props) $$invalidate(8, validityMessage = $$props.validityMessage);
		if ('touched' in $$props) $$invalidate(9, touched = $$props.touched);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		controlType,
		id,
		label,
		row,
		placeholder,
		value,
		type,
		valid,
		validityMessage,
		touched,
		input_handler,
		input_handler_1,
		blur_handler,
		blur_handler_1
	];
}

class TextInput extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$3, create_fragment$3, safe_not_equal, {
			controlType: 0,
			id: 1,
			label: 2,
			row: 3,
			placeholder: 4,
			value: 5,
			type: 6,
			valid: 7,
			validityMessage: 8
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "TextInput",
			options,
			id: create_fragment$3.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*id*/ ctx[1] === undefined && !('id' in props)) {
			console.warn("<TextInput> was created without expected prop 'id'");
		}

		if (/*label*/ ctx[2] === undefined && !('label' in props)) {
			console.warn("<TextInput> was created without expected prop 'label'");
		}

		if (/*placeholder*/ ctx[4] === undefined && !('placeholder' in props)) {
			console.warn("<TextInput> was created without expected prop 'placeholder'");
		}

		if (/*value*/ ctx[5] === undefined && !('value' in props)) {
			console.warn("<TextInput> was created without expected prop 'value'");
		}
	}

	get controlType() {
		throw new Error("<TextInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set controlType(value) {
		throw new Error("<TextInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get id() {
		throw new Error("<TextInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set id(value) {
		throw new Error("<TextInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get label() {
		throw new Error("<TextInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set label(value) {
		throw new Error("<TextInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get row() {
		throw new Error("<TextInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set row(value) {
		throw new Error("<TextInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get placeholder() {
		throw new Error("<TextInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set placeholder(value) {
		throw new Error("<TextInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get value() {
		throw new Error("<TextInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set value(value) {
		throw new Error("<TextInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get type() {
		throw new Error("<TextInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set type(value) {
		throw new Error("<TextInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get valid() {
		throw new Error("<TextInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set valid(value) {
		throw new Error("<TextInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get validityMessage() {
		throw new Error("<TextInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set validityMessage(value) {
		throw new Error("<TextInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/UI/Modal.svelte generated by Svelte v3.46.3 */
const file$4 = "src/components/UI/Modal.svelte";
const get_footer_slot_changes = dirty => ({});
const get_footer_slot_context = ctx => ({});

// (71:6) <Button on:click="{closeModal}">
function create_default_slot$1(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Close");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Close");
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot$1.name,
		type: "slot",
		source: "(71:6) <Button on:click=\\\"{closeModal}\\\">",
		ctx
	});

	return block;
}

// (70:24)        
function fallback_block(ctx) {
	let button;
	let current;

	button = new Button({
			props: {
				$$slots: { default: [create_default_slot$1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button.$on("click", /*closeModal*/ ctx[1]);

	const block = {
		c: function create() {
			create_component(button.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(button.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(button, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const button_changes = {};

			if (dirty & /*$$scope*/ 8) {
				button_changes.$$scope = { dirty, ctx };
			}

			button.$set(button_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(button.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(button.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(button, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: fallback_block.name,
		type: "fallback",
		source: "(70:24)        ",
		ctx
	});

	return block;
}

function create_fragment$4(ctx) {
	let div0;
	let div0_transition;
	let t0;
	let div2;
	let h1;
	let t1;
	let t2;
	let div1;
	let t3;
	let footer;
	let div2_transition;
	let current;
	let mounted;
	let dispose;
	const default_slot_template = /*#slots*/ ctx[2].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[3], null);
	const footer_slot_template = /*#slots*/ ctx[2].footer;
	const footer_slot = create_slot(footer_slot_template, ctx, /*$$scope*/ ctx[3], get_footer_slot_context);
	const footer_slot_or_fallback = footer_slot || fallback_block(ctx);

	const block = {
		c: function create() {
			div0 = element("div");
			t0 = space();
			div2 = element("div");
			h1 = element("h1");
			t1 = text(/*title*/ ctx[0]);
			t2 = space();
			div1 = element("div");
			if (default_slot) default_slot.c();
			t3 = space();
			footer = element("footer");
			if (footer_slot_or_fallback) footer_slot_or_fallback.c();
			this.h();
		},
		l: function claim(nodes) {
			div0 = claim_element(nodes, "DIV", { class: true });
			children(div0).forEach(detach_dev);
			t0 = claim_space(nodes);
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			h1 = claim_element(div2_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, /*title*/ ctx[0]);
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			if (default_slot) default_slot.l(div1_nodes);
			div1_nodes.forEach(detach_dev);
			t3 = claim_space(div2_nodes);
			footer = claim_element(div2_nodes, "FOOTER", { class: true });
			var footer_nodes = children(footer);
			if (footer_slot_or_fallback) footer_slot_or_fallback.l(footer_nodes);
			footer_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "modal-backdrop svelte-17q1g7o");
			add_location(div0, file$4, 62, 0, 998);
			attr_dev(h1, "class", "svelte-17q1g7o");
			add_location(h1, file$4, 64, 2, 1123);
			attr_dev(div1, "class", "content svelte-17q1g7o");
			add_location(div1, file$4, 65, 2, 1142);
			attr_dev(footer, "class", "svelte-17q1g7o");
			add_location(footer, file$4, 68, 2, 1187);
			attr_dev(div2, "class", "modal svelte-17q1g7o");
			add_location(div2, file$4, 63, 0, 1073);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div0, anchor);
			insert_hydration_dev(target, t0, anchor);
			insert_hydration_dev(target, div2, anchor);
			append_hydration_dev(div2, h1);
			append_hydration_dev(h1, t1);
			append_hydration_dev(div2, t2);
			append_hydration_dev(div2, div1);

			if (default_slot) {
				default_slot.m(div1, null);
			}

			append_hydration_dev(div2, t3);
			append_hydration_dev(div2, footer);

			if (footer_slot_or_fallback) {
				footer_slot_or_fallback.m(footer, null);
			}

			current = true;

			if (!mounted) {
				dispose = listen_dev(div0, "click", /*closeModal*/ ctx[1], false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*title*/ 1) set_data_dev(t1, /*title*/ ctx[0]);

			if (default_slot) {
				if (default_slot.p && (!current || dirty & /*$$scope*/ 8)) {
					update_slot_base(
						default_slot,
						default_slot_template,
						ctx,
						/*$$scope*/ ctx[3],
						!current
						? get_all_dirty_from_scope(/*$$scope*/ ctx[3])
						: get_slot_changes(default_slot_template, /*$$scope*/ ctx[3], dirty, null),
						null
					);
				}
			}

			if (footer_slot) {
				if (footer_slot.p && (!current || dirty & /*$$scope*/ 8)) {
					update_slot_base(
						footer_slot,
						footer_slot_template,
						ctx,
						/*$$scope*/ ctx[3],
						!current
						? get_all_dirty_from_scope(/*$$scope*/ ctx[3])
						: get_slot_changes(footer_slot_template, /*$$scope*/ ctx[3], dirty, get_footer_slot_changes),
						get_footer_slot_context
					);
				}
			}
		},
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (!div0_transition) div0_transition = create_bidirectional_transition(div0, fade, {}, true);
				div0_transition.run(1);
			});

			transition_in(default_slot, local);
			transition_in(footer_slot_or_fallback, local);

			add_render_callback(() => {
				if (!div2_transition) div2_transition = create_bidirectional_transition(div2, fly, { y: 300 }, true);
				div2_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			if (!div0_transition) div0_transition = create_bidirectional_transition(div0, fade, {}, false);
			div0_transition.run(0);
			transition_out(default_slot, local);
			transition_out(footer_slot_or_fallback, local);
			if (!div2_transition) div2_transition = create_bidirectional_transition(div2, fly, { y: 300 }, false);
			div2_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div0);
			if (detaching && div0_transition) div0_transition.end();
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div2);
			if (default_slot) default_slot.d(detaching);
			if (footer_slot_or_fallback) footer_slot_or_fallback.d(detaching);
			if (detaching && div2_transition) div2_transition.end();
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$4.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$4($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Modal', slots, ['default','footer']);
	let { title } = $$props;
	const dispatch = createEventDispatcher();

	function closeModal() {
		dispatch('cancel');
	}

	const writable_props = ['title'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Modal> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('title' in $$props) $$invalidate(0, title = $$props.title);
		if ('$$scope' in $$props) $$invalidate(3, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => ({
		createEventDispatcher,
		fly,
		fade,
		Button,
		title,
		dispatch,
		closeModal
	});

	$$self.$inject_state = $$props => {
		if ('title' in $$props) $$invalidate(0, title = $$props.title);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [title, closeModal, slots, $$scope];
}

class Modal extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$4, create_fragment$4, safe_not_equal, { title: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Modal",
			options,
			id: create_fragment$4.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*title*/ ctx[0] === undefined && !('title' in props)) {
			console.warn("<Modal> was created without expected prop 'title'");
		}
	}

	get title() {
		throw new Error("<Modal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error("<Modal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

function isEmpty(val, len) {
  return val.trim().length < len;
}

function isValidEmail(val) {
  return new RegExp(
    "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?"
  ).test(val);
}

/* src/components/Meetup/EditMeetup.svelte generated by Svelte v3.46.3 */

const { Error: Error_1$1, console: console_1$1 } = globals;
const file$5 = "src/components/Meetup/EditMeetup.svelte";

// (127:0) <Modal title="Edit Meetup Data" on:cancel>
function create_default_slot_3$1(ctx) {
	let form;
	let textinput0;
	let t0;
	let textinput1;
	let t1;
	let textinput2;
	let t2;
	let textinput3;
	let t3;
	let textinput4;
	let t4;
	let textinput5;
	let current;
	let mounted;
	let dispose;

	textinput0 = new TextInput({
			props: {
				id: "title",
				label: "Title",
				value: /*title*/ ctx[1],
				valid: /*isTitleValid*/ ctx[12],
				validityMessage: "Please enter a valid title",
				placeholder: "Your title goes here"
			},
			$$inline: true
		});

	textinput0.$on("input", /*input_handler*/ ctx[17]);

	textinput1 = new TextInput({
			props: {
				id: "subtitle",
				label: "Subtitle",
				value: /*subtitle*/ ctx[2],
				valid: /*isSubtitleValid*/ ctx[11],
				validityMessage: "Please enter a valid subtitle",
				placeholder: "Your subtitle goes here"
			},
			$$inline: true
		});

	textinput1.$on("input", /*input_handler_1*/ ctx[18]);

	textinput2 = new TextInput({
			props: {
				id: "description",
				label: "Description",
				value: /*desc*/ ctx[5],
				row: "3",
				valid: /*isDescValid*/ ctx[8],
				validityMessage: "Please enter a valid description",
				controlType: "textarea",
				placeholder: "Please add some description"
			},
			$$inline: true
		});

	textinput2.$on("input", /*input_handler_2*/ ctx[19]);

	textinput3 = new TextInput({
			props: {
				id: "imageUrl",
				label: "imageUrl",
				value: /*url*/ ctx[3],
				type: "url",
				valid: /*isUrlValid*/ ctx[10],
				validityMessage: "Please enter a valid image url",
				placeholder: "Please add image url"
			},
			$$inline: true
		});

	textinput3.$on("input", /*input_handler_3*/ ctx[20]);

	textinput4 = new TextInput({
			props: {
				id: "address",
				label: "Address",
				value: /*address*/ ctx[4],
				row: "3",
				valid: /*isAddressValid*/ ctx[9],
				validityMessage: "Please enter a valid address",
				controlType: "textarea",
				placeholder: "Your address goes here"
			},
			$$inline: true
		});

	textinput4.$on("input", /*input_handler_4*/ ctx[21]);

	textinput5 = new TextInput({
			props: {
				id: "email",
				label: "email",
				value: /*email*/ ctx[6],
				type: "email",
				valid: /*isEmailValid*/ ctx[7],
				validityMessage: "Please enter a valid email",
				placeholder: "Your e-mail Id goes here"
			},
			$$inline: true
		});

	textinput5.$on("input", /*input_handler_5*/ ctx[22]);

	const block = {
		c: function create() {
			form = element("form");
			create_component(textinput0.$$.fragment);
			t0 = space();
			create_component(textinput1.$$.fragment);
			t1 = space();
			create_component(textinput2.$$.fragment);
			t2 = space();
			create_component(textinput3.$$.fragment);
			t3 = space();
			create_component(textinput4.$$.fragment);
			t4 = space();
			create_component(textinput5.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			form = claim_element(nodes, "FORM", { class: true });
			var form_nodes = children(form);
			claim_component(textinput0.$$.fragment, form_nodes);
			t0 = claim_space(form_nodes);
			claim_component(textinput1.$$.fragment, form_nodes);
			t1 = claim_space(form_nodes);
			claim_component(textinput2.$$.fragment, form_nodes);
			t2 = claim_space(form_nodes);
			claim_component(textinput3.$$.fragment, form_nodes);
			t3 = claim_space(form_nodes);
			claim_component(textinput4.$$.fragment, form_nodes);
			t4 = claim_space(form_nodes);
			claim_component(textinput5.$$.fragment, form_nodes);
			form_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(form, "class", "svelte-6x27t8");
			add_location(form, file$5, 127, 2, 3368);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, form, anchor);
			mount_component(textinput0, form, null);
			append_hydration_dev(form, t0);
			mount_component(textinput1, form, null);
			append_hydration_dev(form, t1);
			mount_component(textinput2, form, null);
			append_hydration_dev(form, t2);
			mount_component(textinput3, form, null);
			append_hydration_dev(form, t3);
			mount_component(textinput4, form, null);
			append_hydration_dev(form, t4);
			mount_component(textinput5, form, null);
			current = true;

			if (!mounted) {
				dispose = listen_dev(form, "submit", prevent_default(/*submitForm*/ ctx[14]), false, true, false);
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			const textinput0_changes = {};
			if (dirty & /*title*/ 2) textinput0_changes.value = /*title*/ ctx[1];
			if (dirty & /*isTitleValid*/ 4096) textinput0_changes.valid = /*isTitleValid*/ ctx[12];
			textinput0.$set(textinput0_changes);
			const textinput1_changes = {};
			if (dirty & /*subtitle*/ 4) textinput1_changes.value = /*subtitle*/ ctx[2];
			if (dirty & /*isSubtitleValid*/ 2048) textinput1_changes.valid = /*isSubtitleValid*/ ctx[11];
			textinput1.$set(textinput1_changes);
			const textinput2_changes = {};
			if (dirty & /*desc*/ 32) textinput2_changes.value = /*desc*/ ctx[5];
			if (dirty & /*isDescValid*/ 256) textinput2_changes.valid = /*isDescValid*/ ctx[8];
			textinput2.$set(textinput2_changes);
			const textinput3_changes = {};
			if (dirty & /*url*/ 8) textinput3_changes.value = /*url*/ ctx[3];
			if (dirty & /*isUrlValid*/ 1024) textinput3_changes.valid = /*isUrlValid*/ ctx[10];
			textinput3.$set(textinput3_changes);
			const textinput4_changes = {};
			if (dirty & /*address*/ 16) textinput4_changes.value = /*address*/ ctx[4];
			if (dirty & /*isAddressValid*/ 512) textinput4_changes.valid = /*isAddressValid*/ ctx[9];
			textinput4.$set(textinput4_changes);
			const textinput5_changes = {};
			if (dirty & /*email*/ 64) textinput5_changes.value = /*email*/ ctx[6];
			if (dirty & /*isEmailValid*/ 128) textinput5_changes.valid = /*isEmailValid*/ ctx[7];
			textinput5.$set(textinput5_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(textinput0.$$.fragment, local);
			transition_in(textinput1.$$.fragment, local);
			transition_in(textinput2.$$.fragment, local);
			transition_in(textinput3.$$.fragment, local);
			transition_in(textinput4.$$.fragment, local);
			transition_in(textinput5.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(textinput0.$$.fragment, local);
			transition_out(textinput1.$$.fragment, local);
			transition_out(textinput2.$$.fragment, local);
			transition_out(textinput3.$$.fragment, local);
			transition_out(textinput4.$$.fragment, local);
			transition_out(textinput5.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(form);
			destroy_component(textinput0);
			destroy_component(textinput1);
			destroy_component(textinput2);
			destroy_component(textinput3);
			destroy_component(textinput4);
			destroy_component(textinput5);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_3$1.name,
		type: "slot",
		source: "(127:0) <Modal title=\\\"Edit Meetup Data\\\" on:cancel>",
		ctx
	});

	return block;
}

// (190:4) <Button type="submit" mode="outline" on:click="{onCancel}" >
function create_default_slot_2$1(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Cancel");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Cancel");
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_2$1.name,
		type: "slot",
		source: "(190:4) <Button type=\\\"submit\\\" mode=\\\"outline\\\" on:click=\\\"{onCancel}\\\" >",
		ctx
	});

	return block;
}

// (191:4) <Button type="submit" on:click="{submitForm}" disabled="{!isFormValid}" >
function create_default_slot_1$1(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Save");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Save");
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1$1.name,
		type: "slot",
		source: "(191:4) <Button type=\\\"submit\\\" on:click=\\\"{submitForm}\\\" disabled=\\\"{!isFormValid}\\\" >",
		ctx
	});

	return block;
}

// (192:4) {#if id}
function create_if_block$2(ctx) {
	let button;
	let current;

	button = new Button({
			props: {
				type: "button",
				$$slots: { default: [create_default_slot$2] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button.$on("click", /*onDeleteMeetup*/ ctx[16]);

	const block = {
		c: function create() {
			create_component(button.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(button.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(button, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const button_changes = {};

			if (dirty & /*$$scope*/ 67108864) {
				button_changes.$$scope = { dirty, ctx };
			}

			button.$set(button_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(button.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(button.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(button, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$2.name,
		type: "if",
		source: "(192:4) {#if id}",
		ctx
	});

	return block;
}

// (193:6) <Button type="button" on:click="{onDeleteMeetup}">
function create_default_slot$2(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Delete");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Delete");
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot$2.name,
		type: "slot",
		source: "(193:6) <Button type=\\\"button\\\" on:click=\\\"{onDeleteMeetup}\\\">",
		ctx
	});

	return block;
}

// (189:2) 
function create_footer_slot(ctx) {
	let div;
	let button0;
	let t0;
	let button1;
	let t1;
	let current;

	button0 = new Button({
			props: {
				type: "submit",
				mode: "outline",
				$$slots: { default: [create_default_slot_2$1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button0.$on("click", /*onCancel*/ ctx[15]);

	button1 = new Button({
			props: {
				type: "submit",
				disabled: !/*isFormValid*/ ctx[13],
				$$slots: { default: [create_default_slot_1$1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button1.$on("click", /*submitForm*/ ctx[14]);
	let if_block = /*id*/ ctx[0] && create_if_block$2(ctx);

	const block = {
		c: function create() {
			div = element("div");
			create_component(button0.$$.fragment);
			t0 = space();
			create_component(button1.$$.fragment);
			t1 = space();
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { slot: true });
			var div_nodes = children(div);
			claim_component(button0.$$.fragment, div_nodes);
			t0 = claim_space(div_nodes);
			claim_component(button1.$$.fragment, div_nodes);
			t1 = claim_space(div_nodes);
			if (if_block) if_block.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "slot", "footer");
			add_location(div, file$5, 188, 2, 5201);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div, anchor);
			mount_component(button0, div, null);
			append_hydration_dev(div, t0);
			mount_component(button1, div, null);
			append_hydration_dev(div, t1);
			if (if_block) if_block.m(div, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			const button0_changes = {};

			if (dirty & /*$$scope*/ 67108864) {
				button0_changes.$$scope = { dirty, ctx };
			}

			button0.$set(button0_changes);
			const button1_changes = {};
			if (dirty & /*isFormValid*/ 8192) button1_changes.disabled = !/*isFormValid*/ ctx[13];

			if (dirty & /*$$scope*/ 67108864) {
				button1_changes.$$scope = { dirty, ctx };
			}

			button1.$set(button1_changes);

			if (/*id*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*id*/ 1) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block$2(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(div, null);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(button0.$$.fragment, local);
			transition_in(button1.$$.fragment, local);
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(button0.$$.fragment, local);
			transition_out(button1.$$.fragment, local);
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_component(button0);
			destroy_component(button1);
			if (if_block) if_block.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_footer_slot.name,
		type: "slot",
		source: "(189:2) ",
		ctx
	});

	return block;
}

function create_fragment$5(ctx) {
	let modal;
	let current;

	modal = new Modal({
			props: {
				title: "Edit Meetup Data",
				$$slots: {
					footer: [create_footer_slot],
					default: [create_default_slot_3$1]
				},
				$$scope: { ctx }
			},
			$$inline: true
		});

	modal.$on("cancel", /*cancel_handler*/ ctx[23]);

	const block = {
		c: function create() {
			create_component(modal.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(modal.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(modal, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const modal_changes = {};

			if (dirty & /*$$scope, id, isFormValid, email, isEmailValid, address, isAddressValid, url, isUrlValid, desc, isDescValid, subtitle, isSubtitleValid, title, isTitleValid*/ 67125247) {
				modal_changes.$$scope = { dirty, ctx };
			}

			modal.$set(modal_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(modal.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(modal.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(modal, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$5.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$5($$self, $$props, $$invalidate) {
	let isTitleValid;
	let isSubtitleValid;
	let isUrlValid;
	let isAddressValid;
	let isDescValid;
	let isEmailValid;
	let isFormValid;
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('EditMeetup', slots, []);
	let { id = null } = $$props;
	let title = '';
	let subtitle = '';
	let url = '';
	let address = '';
	let desc = '';
	let email = '';
	const dispatch = createEventDispatcher();

	if (id) {
		const unSub = meetups.subscribe(items => {
			const meetupToBeEdited = items.find(item => item.id === id);
			$$invalidate(1, title = meetupToBeEdited.title);
			$$invalidate(2, subtitle = meetupToBeEdited.subtitle);
			$$invalidate(3, url = meetupToBeEdited.imageUrl);
			$$invalidate(4, address = meetupToBeEdited.address);
			$$invalidate(5, desc = meetupToBeEdited.description);
			$$invalidate(6, email = meetupToBeEdited.contactEmail);
		});

		unSub();
	}

	function sendingErrorMsg(errorMsg) {
		dispatch('error-modal', errorMsg);
	}

	function submitForm() {
		const meetupData = {
			title,
			subtitle,
			imageUrl: url,
			description: desc,
			address,
			contactEmail: email
		};

		if (id) {
			fetch(`https://vue-http-exmp-default-rtdb.firebaseio.com/meetups/${id}.json`, {
				method: 'PATCH',
				body: JSON.stringify(meetupData),
				headers: { 'Content-Type': 'application/json' }
			}).then(res => {
				if (!res.ok) {
					throw new Error('Error editting meetup!');
				}

				console.log('Meetup editted');
				meetups.updateMeetup(id, meetupData);
			}).catch(err => {
				sendingErrorMsg(err.message);
			}); // console.log(err.message);
		} else {
			fetch('https://vue-http-exmp-default-rtdb.firebaseio.com/meetups.json', {
				method: 'POST',
				body: JSON.stringify({ ...meetupData, isFavorite: false }),
				headers: { 'Content-Type': 'application/json' }
			}).then(res => {
				if (!res.ok) {
					throw new Error('Error saving meetup!');
				}

				return res.json();
			}).then(data => {
				console.log('Meetup added :', data);

				meetups.addMeetup({
					...meetupData,
					isFavorite: false,
					id: data.name
				});
			}).catch(err => {
				sendingErrorMsg(err.message);
			}); // console.log(err);
		}

		dispatch('save-form-data');
	}

	function onCancel() {
		dispatch('cancel');
	}

	function onDeleteMeetup() {
		fetch(`https://vue-http-exmp-default-rtdb.firebaseio.com/meetups/${id}.json`, { method: 'DELETE' }).then(res => {
			if (!res.ok) {
				throw new Error('Error deleting meetup!');
			}

			meetups.deleteMeetup(id);
		}).catch(err => {
			// console.log(err);
			sendingErrorMsg(err.message);
		});

		dispatch('save-form-data');
	}

	const writable_props = ['id'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1$1.warn(`<EditMeetup> was created with unknown prop '${key}'`);
	});

	const input_handler = event => $$invalidate(1, title = event.target.value);
	const input_handler_1 = event => $$invalidate(2, subtitle = event.target.value);
	const input_handler_2 = event => $$invalidate(5, desc = event.target.value);
	const input_handler_3 = event => $$invalidate(3, url = event.target.value);
	const input_handler_4 = event => $$invalidate(4, address = event.target.value);
	const input_handler_5 = event => $$invalidate(6, email = event.target.value);

	function cancel_handler(event) {
		bubble.call(this, $$self, event);
	}

	$$self.$$set = $$props => {
		if ('id' in $$props) $$invalidate(0, id = $$props.id);
	};

	$$self.$capture_state = () => ({
		createEventDispatcher,
		meetups,
		TextInput,
		Button,
		Modal,
		isEmpty,
		isValidEmail,
		id,
		title,
		subtitle,
		url,
		address,
		desc,
		email,
		dispatch,
		sendingErrorMsg,
		submitForm,
		onCancel,
		onDeleteMeetup,
		isEmailValid,
		isDescValid,
		isAddressValid,
		isUrlValid,
		isSubtitleValid,
		isTitleValid,
		isFormValid
	});

	$$self.$inject_state = $$props => {
		if ('id' in $$props) $$invalidate(0, id = $$props.id);
		if ('title' in $$props) $$invalidate(1, title = $$props.title);
		if ('subtitle' in $$props) $$invalidate(2, subtitle = $$props.subtitle);
		if ('url' in $$props) $$invalidate(3, url = $$props.url);
		if ('address' in $$props) $$invalidate(4, address = $$props.address);
		if ('desc' in $$props) $$invalidate(5, desc = $$props.desc);
		if ('email' in $$props) $$invalidate(6, email = $$props.email);
		if ('isEmailValid' in $$props) $$invalidate(7, isEmailValid = $$props.isEmailValid);
		if ('isDescValid' in $$props) $$invalidate(8, isDescValid = $$props.isDescValid);
		if ('isAddressValid' in $$props) $$invalidate(9, isAddressValid = $$props.isAddressValid);
		if ('isUrlValid' in $$props) $$invalidate(10, isUrlValid = $$props.isUrlValid);
		if ('isSubtitleValid' in $$props) $$invalidate(11, isSubtitleValid = $$props.isSubtitleValid);
		if ('isTitleValid' in $$props) $$invalidate(12, isTitleValid = $$props.isTitleValid);
		if ('isFormValid' in $$props) $$invalidate(13, isFormValid = $$props.isFormValid);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*title*/ 2) {
			 $$invalidate(12, isTitleValid = !isEmpty(title, 3));
		}

		if ($$self.$$.dirty & /*subtitle*/ 4) {
			 $$invalidate(11, isSubtitleValid = !isEmpty(subtitle, 3));
		}

		if ($$self.$$.dirty & /*url*/ 8) {
			 $$invalidate(10, isUrlValid = !isEmpty(url, 5));
		}

		if ($$self.$$.dirty & /*address*/ 16) {
			 $$invalidate(9, isAddressValid = !isEmpty(address, 10));
		}

		if ($$self.$$.dirty & /*desc*/ 32) {
			 $$invalidate(8, isDescValid = !isEmpty(desc, 5));
		}

		if ($$self.$$.dirty & /*email*/ 64) {
			 $$invalidate(7, isEmailValid = isValidEmail(email));
		}

		if ($$self.$$.dirty & /*isTitleValid, isSubtitleValid, isUrlValid, isAddressValid, isDescValid, isEmailValid*/ 8064) {
			 $$invalidate(13, isFormValid = isTitleValid && isSubtitleValid && isUrlValid && isAddressValid && isDescValid & isEmailValid);
		}
	};

	return [
		id,
		title,
		subtitle,
		url,
		address,
		desc,
		email,
		isEmailValid,
		isDescValid,
		isAddressValid,
		isUrlValid,
		isSubtitleValid,
		isTitleValid,
		isFormValid,
		submitForm,
		onCancel,
		onDeleteMeetup,
		input_handler,
		input_handler_1,
		input_handler_2,
		input_handler_3,
		input_handler_4,
		input_handler_5,
		cancel_handler
	];
}

class EditMeetup extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$5, create_fragment$5, safe_not_equal, { id: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "EditMeetup",
			options,
			id: create_fragment$5.name
		});
	}

	get id() {
		throw new Error_1$1("<EditMeetup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set id(value) {
		throw new Error_1$1("<EditMeetup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/UI/LoadingSpinner.svelte generated by Svelte v3.46.3 */

const file$6 = "src/components/UI/LoadingSpinner.svelte";

function create_fragment$6(ctx) {
	let div4;
	let div3;
	let div0;
	let div1;
	let div2;

	const block = {
		c: function create() {
			div4 = element("div");
			div3 = element("div");
			div0 = element("div");
			div1 = element("div");
			div2 = element("div");
			this.h();
		},
		l: function claim(nodes) {
			div4 = claim_element(nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div0 = claim_element(div3_nodes, "DIV", { class: true });
			children(div0).forEach(detach_dev);
			div1 = claim_element(div3_nodes, "DIV", { class: true });
			children(div1).forEach(detach_dev);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			children(div2).forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "svelte-1j1bhq9");
			add_location(div0, file$6, 1, 28, 58);
			attr_dev(div1, "class", "svelte-1j1bhq9");
			add_location(div1, file$6, 1, 39, 69);
			attr_dev(div2, "class", "svelte-1j1bhq9");
			add_location(div2, file$6, 1, 50, 80);
			attr_dev(div3, "class", "lds-facebook svelte-1j1bhq9");
			add_location(div3, file$6, 1, 2, 32);
			attr_dev(div4, "class", "loading-spinner svelte-1j1bhq9");
			add_location(div4, file$6, 0, 0, 0);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div4, anchor);
			append_hydration_dev(div4, div3);
			append_hydration_dev(div3, div0);
			append_hydration_dev(div3, div1);
			append_hydration_dev(div3, div2);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div4);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$6.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$6($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('LoadingSpinner', slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<LoadingSpinner> was created with unknown prop '${key}'`);
	});

	return [];
}

class LoadingSpinner extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$6, create_fragment$6, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "LoadingSpinner",
			options,
			id: create_fragment$6.name
		});
	}
}

/* src/routes/index.svelte generated by Svelte v3.46.3 */

const { Error: Error_1$2 } = globals;
const file$7 = "src/routes/index.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[14] = list[i];
	return child_ctx;
}

// (128:0) {#if editMode === 'edit'}
function create_if_block_2(ctx) {
	let editmeetup;
	let current;

	editmeetup = new EditMeetup({
			props: { id: /*editedId*/ ctx[1] },
			$$inline: true
		});

	editmeetup.$on("save-form-data", /*onSaveMeetup*/ ctx[5]);
	editmeetup.$on("cancel", /*cancelEdit*/ ctx[6]);
	editmeetup.$on("error-modal", onErrorEditPage);

	const block = {
		c: function create() {
			create_component(editmeetup.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(editmeetup.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(editmeetup, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const editmeetup_changes = {};
			if (dirty & /*editedId*/ 2) editmeetup_changes.id = /*editedId*/ ctx[1];
			editmeetup.$set(editmeetup_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(editmeetup.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(editmeetup.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(editmeetup, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(128:0) {#if editMode === 'edit'}",
		ctx
	});

	return block;
}

// (135:0) {:else}
function create_else_block$2(ctx) {
	let section0;
	let meetupfilter;
	let t0;
	let button;
	let t1;
	let t2;
	let section1;
	let each_blocks = [];
	let each_1_lookup = new Map();
	let current;
	meetupfilter = new MeetupFilter({ $$inline: true });
	meetupfilter.$on("select-component", /*selectComponent*/ ctx[4]);

	button = new Button({
			props: {
				$$slots: { default: [create_default_slot$3] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button.$on("click", /*onAddMeetup*/ ctx[8]);
	let if_block = /*filteredMeetups*/ ctx[2].length === 0 && create_if_block_1$2(ctx);
	let each_value = /*filteredMeetups*/ ctx[2];
	validate_each_argument(each_value);
	const get_key = ctx => /*meetup*/ ctx[14].id;
	validate_each_keys(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			section0 = element("section");
			create_component(meetupfilter.$$.fragment);
			t0 = space();
			create_component(button.$$.fragment);
			t1 = space();
			if (if_block) if_block.c();
			t2 = space();
			section1 = element("section");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			section0 = claim_element(nodes, "SECTION", { id: true, class: true });
			var section0_nodes = children(section0);
			claim_component(meetupfilter.$$.fragment, section0_nodes);
			t0 = claim_space(section0_nodes);
			claim_component(button.$$.fragment, section0_nodes);
			section0_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			if (if_block) if_block.l(nodes);
			t2 = claim_space(nodes);
			section1 = claim_element(nodes, "SECTION", { id: true, class: true });
			var section1_nodes = children(section1);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(section1_nodes);
			}

			section1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(section0, "id", "meetup-controls");
			attr_dev(section0, "class", "svelte-18e9u1f");
			add_location(section0, file$7, 135, 2, 3035);
			attr_dev(section1, "id", "meetups");
			attr_dev(section1, "class", "svelte-18e9u1f");
			add_location(section1, file$7, 142, 2, 3301);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, section0, anchor);
			mount_component(meetupfilter, section0, null);
			append_hydration_dev(section0, t0);
			mount_component(button, section0, null);
			insert_hydration_dev(target, t1, anchor);
			if (if_block) if_block.m(target, anchor);
			insert_hydration_dev(target, t2, anchor);
			insert_hydration_dev(target, section1, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(section1, null);
			}

			current = true;
		},
		p: function update(ctx, dirty) {
			const button_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button_changes.$$scope = { dirty, ctx };
			}

			button.$set(button_changes);

			if (/*filteredMeetups*/ ctx[2].length === 0) {
				if (if_block) ; else {
					if_block = create_if_block_1$2(ctx);
					if_block.c();
					if_block.m(t2.parentNode, t2);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			if (dirty & /*filteredMeetups, onEditMeetup*/ 132) {
				each_value = /*filteredMeetups*/ ctx[2];
				validate_each_argument(each_value);
				group_outros();
				for (let i = 0; i < each_blocks.length; i += 1) each_blocks[i].r();
				validate_each_keys(ctx, each_value, get_each_context, get_key);
				each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, section1, fix_and_outro_and_destroy_block, create_each_block, null, get_each_context);
				for (let i = 0; i < each_blocks.length; i += 1) each_blocks[i].a();
				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(meetupfilter.$$.fragment, local);
			transition_in(button.$$.fragment, local);

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			transition_out(meetupfilter.$$.fragment, local);
			transition_out(button.$$.fragment, local);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section0);
			destroy_component(meetupfilter);
			destroy_component(button);
			if (detaching) detach_dev(t1);
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(section1);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d();
			}
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block$2.name,
		type: "else",
		source: "(135:0) {:else}",
		ctx
	});

	return block;
}

// (133:0) {#if isLoading}
function create_if_block$3(ctx) {
	let loadingspinner;
	let current;
	loadingspinner = new LoadingSpinner({ $$inline: true });

	const block = {
		c: function create() {
			create_component(loadingspinner.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(loadingspinner.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(loadingspinner, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(loadingspinner.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(loadingspinner.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(loadingspinner, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$3.name,
		type: "if",
		source: "(133:0) {#if isLoading}",
		ctx
	});

	return block;
}

// (138:4) <Button on:click="{onAddMeetup}">
function create_default_slot$3(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("New Meetup");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "New Meetup");
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot$3.name,
		type: "slot",
		source: "(138:4) <Button on:click=\\\"{onAddMeetup}\\\">",
		ctx
	});

	return block;
}

// (140:0) {#if filteredMeetups.length === 0}
function create_if_block_1$2(ctx) {
	let p;
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text("No meetups found!, Please add some.");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { id: true, class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, "No meetups found!, Please add some.");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "id", "no-meetups");
			attr_dev(p, "class", "svelte-18e9u1f");
			add_location(p, file$7, 140, 2, 3234);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, p, anchor);
			append_hydration_dev(p, t);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1$2.name,
		type: "if",
		source: "(140:0) {#if filteredMeetups.length === 0}",
		ctx
	});

	return block;
}

// (144:4) {#each filteredMeetups as meetup (meetup.id)}
function create_each_block(key_1, ctx) {
	let div;
	let meetupitem;
	let t;
	let div_transition;
	let rect;
	let stop_animation = noop;
	let current;

	meetupitem = new MeetupItem({
			props: {
				title: /*meetup*/ ctx[14].title,
				subtitle: /*meetup*/ ctx[14].subtitle,
				description: /*meetup*/ ctx[14].description,
				imageUrl: /*meetup*/ ctx[14].imageUrl,
				address: /*meetup*/ ctx[14].address,
				email: /*meetup*/ ctx[14].contactEmail,
				id: /*meetup*/ ctx[14].id,
				isFav: /*meetup*/ ctx[14].isFavorite
			},
			$$inline: true
		});

	meetupitem.$on("edit-meetup", /*onEditMeetup*/ ctx[7]);

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			div = element("div");
			create_component(meetupitem.$$.fragment);
			t = space();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", {});
			var div_nodes = children(div);
			claim_component(meetupitem.$$.fragment, div_nodes);
			t = claim_space(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(div, file$7, 144, 6, 3380);
			this.first = div;
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div, anchor);
			mount_component(meetupitem, div, null);
			append_hydration_dev(div, t);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const meetupitem_changes = {};
			if (dirty & /*filteredMeetups*/ 4) meetupitem_changes.title = /*meetup*/ ctx[14].title;
			if (dirty & /*filteredMeetups*/ 4) meetupitem_changes.subtitle = /*meetup*/ ctx[14].subtitle;
			if (dirty & /*filteredMeetups*/ 4) meetupitem_changes.description = /*meetup*/ ctx[14].description;
			if (dirty & /*filteredMeetups*/ 4) meetupitem_changes.imageUrl = /*meetup*/ ctx[14].imageUrl;
			if (dirty & /*filteredMeetups*/ 4) meetupitem_changes.address = /*meetup*/ ctx[14].address;
			if (dirty & /*filteredMeetups*/ 4) meetupitem_changes.email = /*meetup*/ ctx[14].contactEmail;
			if (dirty & /*filteredMeetups*/ 4) meetupitem_changes.id = /*meetup*/ ctx[14].id;
			if (dirty & /*filteredMeetups*/ 4) meetupitem_changes.isFav = /*meetup*/ ctx[14].isFavorite;
			meetupitem.$set(meetupitem_changes);
		},
		r: function measure() {
			rect = div.getBoundingClientRect();
		},
		f: function fix() {
			fix_position(div);
			stop_animation();
			add_transform(div, rect);
		},
		a: function animate() {
			stop_animation();
			stop_animation = create_animation(div, rect, flip, { duration: 700 });
		},
		i: function intro(local) {
			if (current) return;
			transition_in(meetupitem.$$.fragment, local);

			add_render_callback(() => {
				if (!div_transition) div_transition = create_bidirectional_transition(div, scale, {}, true);
				div_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			transition_out(meetupitem.$$.fragment, local);
			if (!div_transition) div_transition = create_bidirectional_transition(div, scale, {}, false);
			div_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_component(meetupitem);
			if (detaching && div_transition) div_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(144:4) {#each filteredMeetups as meetup (meetup.id)}",
		ctx
	});

	return block;
}

function create_fragment$7(ctx) {
	let t0;
	let t1;
	let current_block_type_index;
	let if_block1;
	let if_block1_anchor;
	let current;
	let if_block0 = /*editMode*/ ctx[0] === 'edit' && create_if_block_2(ctx);
	const if_block_creators = [create_if_block$3, create_else_block$2];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*isLoading*/ ctx[3]) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx);
	if_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			t0 = space();
			if (if_block0) if_block0.c();
			t1 = space();
			if_block1.c();
			if_block1_anchor = empty();
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all('[data-svelte=\"svelte-1t8qyrj\"]', document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			if (if_block0) if_block0.l(nodes);
			t1 = claim_space(nodes);
			if_block1.l(nodes);
			if_block1_anchor = empty();
			this.h();
		},
		h: function hydrate() {
			document.title = "Infinity Meetups";
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t0, anchor);
			if (if_block0) if_block0.m(target, anchor);
			insert_hydration_dev(target, t1, anchor);
			if_blocks[current_block_type_index].m(target, anchor);
			insert_hydration_dev(target, if_block1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*editMode*/ ctx[0] === 'edit') {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*editMode*/ 1) {
						transition_in(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_2(ctx);
					if_block0.c();
					transition_in(if_block0, 1);
					if_block0.m(t1.parentNode, t1);
				}
			} else if (if_block0) {
				group_outros();

				transition_out(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				check_outros();
			}

			if_block1.p(ctx, dirty);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block0);
			transition_in(if_block1);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block0);
			transition_out(if_block1);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (if_block0) if_block0.d(detaching);
			if (detaching) detach_dev(t1);
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) detach_dev(if_block1_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$7.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function preload(page) {
	// console.log(page);
	return this.fetch('https://vue-http-exmp-default-rtdb.firebaseio.com/meetups.json').then(res => {
		if (!res.ok) {
			throw new Error('Error fetching meetup data');
		}

		return res.json();
	}).then(data => {
		const loadedMeetups = [];

		for (const key in data) {
			loadedMeetups.push({ ...data[key], id: key });
		}

		// isError = null;
		// isLoading = false;
		return { fetchedMeetups: loadedMeetups.reverse() };
	}).catch(err => {
		// isError = err;
		// isLoading = false;
		this.error(500, 'Could not fetch meetups'); // meetups.setMeetups(loadedMeetups.reverse());
	}); // console.log(err.message);
}

function onErrorEditPage(event) {
	isError = {};
	isError.message = event.detail;
}

function instance$7($$self, $$props, $$invalidate) {
	let filteredMeetups;
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Routes', slots, []);
	let { fetchedMeetups } = $$props;
	const dispatch = createEventDispatcher();
	let loadedMeetups = [];
	let favsOnly = false;
	let editMode;
	let editedId = null;
	let isLoading = false;
	let unsubscribe;

	// let isError = false;
	onMount(() => {
		unsubscribe = meetups.subscribe(items => {
			$$invalidate(10, loadedMeetups = items);
		});

		meetups.setMeetups(fetchedMeetups);
	});

	onDestroy(() => {
		if (unsubscribe) {
			unsubscribe();
		}
	});

	function selectComponent(event) {
		$$invalidate(11, favsOnly = event.detail === 'fav-meetup');
	}

	function onSaveMeetup() {
		$$invalidate(0, editMode = null);
		$$invalidate(1, editedId = null);
	}

	function cancelEdit() {
		$$invalidate(0, editMode = null);
		$$invalidate(1, editedId = null);
	}

	function onEditMeetup(event) {
		$$invalidate(0, editMode = 'edit');
		$$invalidate(1, editedId = event.detail);
	}

	function onAddMeetup() {
		$$invalidate(0, editMode = 'edit');
	}

	const writable_props = ['fetchedMeetups'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('fetchedMeetups' in $$props) $$invalidate(9, fetchedMeetups = $$props.fetchedMeetups);
	};

	$$self.$capture_state = () => ({
		preload,
		createEventDispatcher,
		onMount,
		onDestroy,
		scale,
		flip,
		meetups,
		MeetupItem,
		MeetupFilter,
		Button,
		EditMeetup,
		LoadingSpinner,
		fetchedMeetups,
		dispatch,
		loadedMeetups,
		favsOnly,
		editMode,
		editedId,
		isLoading,
		unsubscribe,
		selectComponent,
		onSaveMeetup,
		cancelEdit,
		onEditMeetup,
		onAddMeetup,
		onErrorEditPage,
		filteredMeetups
	});

	$$self.$inject_state = $$props => {
		if ('fetchedMeetups' in $$props) $$invalidate(9, fetchedMeetups = $$props.fetchedMeetups);
		if ('loadedMeetups' in $$props) $$invalidate(10, loadedMeetups = $$props.loadedMeetups);
		if ('favsOnly' in $$props) $$invalidate(11, favsOnly = $$props.favsOnly);
		if ('editMode' in $$props) $$invalidate(0, editMode = $$props.editMode);
		if ('editedId' in $$props) $$invalidate(1, editedId = $$props.editedId);
		if ('isLoading' in $$props) $$invalidate(3, isLoading = $$props.isLoading);
		if ('unsubscribe' in $$props) unsubscribe = $$props.unsubscribe;
		if ('filteredMeetups' in $$props) $$invalidate(2, filteredMeetups = $$props.filteredMeetups);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*favsOnly, loadedMeetups*/ 3072) {
			 $$invalidate(2, filteredMeetups = favsOnly
			? loadedMeetups.filter(m => m.isFavorite)
			: loadedMeetups);
		}
	};

	return [
		editMode,
		editedId,
		filteredMeetups,
		isLoading,
		selectComponent,
		onSaveMeetup,
		cancelEdit,
		onEditMeetup,
		onAddMeetup,
		fetchedMeetups,
		loadedMeetups,
		favsOnly
	];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$7, create_fragment$7, safe_not_equal, { fetchedMeetups: 9 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment$7.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*fetchedMeetups*/ ctx[9] === undefined && !('fetchedMeetups' in props)) {
			console.warn("<Routes> was created without expected prop 'fetchedMeetups'");
		}
	}

	get fetchedMeetups() {
		throw new Error_1$2("<Routes>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set fetchedMeetups(value) {
		throw new Error_1$2("<Routes>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Routes;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
